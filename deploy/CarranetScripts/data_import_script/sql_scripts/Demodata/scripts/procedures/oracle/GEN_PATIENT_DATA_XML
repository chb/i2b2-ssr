CREATE OR REPLACE PROCEDURE GEN_PATIENT_DATA_XML(tableName varchar2, fileName varchar2, encounter_source varchar2, concept_cd varchar2) is
    f_XML_FILE UTL_FILE.file_type;
    v_record_data varchar2(4000) := null;
    v_FILENAME varchar2(100) := null; 
   
    TYPE cv_type IS REF CURSOR;
    report_cursor cv_type; 
    
    patient_ide varchar2(100);
    encounter_ide varchar2(100);
    start_date date;
    provider_id varchar2(20);
    l_lobval varchar2(32767);
    observation_blob clob;
    
    readSize integer := 0; 
    clobLength integer := 0;
    partialClob varchar2(32767);
  begin

    OPEN report_cursor FOR 
        'SELECT empi,report_id,note_date,mrn_author,comments FROM ' || tableName ||' where mrn_author is not null';
        
      
    --v_FILENAME := TO_CHAR(SYSDATE, 'DDMMYYYYHH24MI') || '.xml';
    v_FILENAME := fileName;

    --execute immediate 'CREATE OR REPLACE DIRECTORY xmlDirectoty AS ''' || directoryName ||'''';
    f_XML_FILE := UTL_FILE.fopen('USER_DIR', v_FILENAME, 'w',32767);

    v_RECORD_DATA := '<?xml version="1.0" encoding="UTF-8"?>';
    UTL_FILE.put_line(f_XML_FILE, v_RECORD_DATA);
    v_RECORD_DATA := '<PatientData xmlns="http://diagon.mgh.harvard.edu/i2b2/i2b2patientdata.xsd"';
    UTL_FILE.put_line(f_XML_FILE, v_RECORD_DATA);
    v_RECORD_DATA := 'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ';
    UTL_FILE.put_line(f_XML_FILE, v_RECORD_DATA);
    v_RECORD_DATA := 'xsi:schemaLocation="http://diagon.mgh.harvard.edu/i2b2/i2b2patientdata.xsd file://diagon/i2b2/i2b2patientdata.xsd">';
    UTL_FILE.put_line(f_XML_FILE, v_RECORD_DATA);

    loop
       FETCH report_cursor INTO patient_ide,encounter_ide,start_date,provider_id,observation_blob;
       EXIT WHEN report_cursor%NOTFOUND;
        
        
        UTL_FILE.put_line(f_XML_FILE, '<visit_dimension>');
        UTL_FILE.put_line(f_XML_FILE, '<encounter_ide source="' || encounter_source ||'">' || encounter_ide ||'</encounter_ide>');
        UTL_FILE.put_line(f_XML_FILE, '<patient_ide source="EMPI">' || patient_ide ||'</patient_ide>' );
    	UTL_FILE.put_line(f_XML_FILE, '<start_date>' || TO_CHAR(start_date, 'YYYY-MM-DD HH24:MM:SS') || '</start_date>');
        UTL_FILE.put_line(f_XML_FILE, '<end_date></end_date>');
        UTL_FILE.put_line(f_XML_FILE, '<sourcesystem_cd>LCS-I2B2</sourcesystem_cd>');
        UTL_FILE.put_line(f_XML_FILE, '</visit_dimension>');
        
        UTL_FILE.put_line(f_XML_FILE, ' <observation_fact>');
        UTL_FILE.put_line(f_XML_FILE,' <encounter_ide source="' || encounter_source ||'">' || encounter_ide || '</encounter_ide>');
        UTL_FILE.put_line(f_XML_FILE,' <patient_ide source="EMPI">' || patient_ide || '</patient_ide>');
        UTL_FILE.put_line(f_XML_FILE,' <concept_cd>' || concept_cd || '</concept_cd>');
        UTL_FILE.put_line(f_XML_FILE,' <provider_id>' || provider_id || '</provider_id>');
        UTL_FILE.put_line(f_XML_FILE,' <start_date>' || TO_CHAR(start_date, 'YYYY-MM-DD HH24:MM:SS') || '</start_date>');
        UTL_FILE.fflush(f_XML_FILE);
        
                
        IF (observation_blob IS NOT  NULL) THEN
            if (dbms_lob.getLength(observation_blob) >2) THEN 
                l_lobval := dbms_lob.substr(observation_blob,32766,1);
                UTL_FILE.put_line(f_XML_FILE,' <observation_blob><![CDATA[ ');
                readSize := 1;
                clobLength := dbms_lob.getlength(observation_blob);  
                while clobLength>readSize  loop
                        partialClob := dbms_lob.substr(observation_blob,32766,readSize);
                        UTL_FILE.put(f_XML_FILE, partialClob); 
                        UTL_FILE.fflush(f_XML_FILE);    
                        readSize := readSize + 32766; 	 
                        if (readSize>32770) then
                           dbms_output.put_line('blob larger than 32766' || encounter_ide);
                        end if;
                end loop;    
                UTL_FILE.put_line( f_XML_FILE,' ]]></observation_blob>');
            END IF;
        END IF;
        UTL_FILE.fflush(f_XML_FILE);
        UTL_FILE.put_line(f_XML_FILE, '<end_date></end_date>');
        UTL_FILE.put_line(f_XML_FILE, '<sourcesystem_cd>LCS-I2B2</sourcesystem_cd>');
        UTL_FILE.put_line(f_XML_FILE, ' </observation_fact>');
    end loop;   
    UTL_FILE.put_line(f_XML_FILE, ' </PatientData>');
    UTL_FILE.fflush(f_XML_FILE);
    UTL_FILE.FCLOSE(f_XML_FILE);
EXCEPTION
    WHEN UTL_FILE.INTERNAL_ERROR THEN
      raise_application_error(-20500,
                              'Cannot open file :' || v_FILENAME ||
                              ', internal error; code:' || sqlcode ||
                              ',message:' || sqlerrm);
    WHEN UTL_FILE.INVALID_OPERATION THEN
      raise_application_error(-20501,
                              'Cannot open file :' || v_FILENAME ||
                              ', invalid operation; code:' || sqlcode ||
                              ',message:' || sqlerrm);
    WHEN UTL_FILE.INVALID_PATH THEN
      raise_application_error(-20502,
                              'Cannot open file :' || v_FILENAME ||
                              ', invalid path; code:' || sqlcode ||
                              ',message:' || sqlerrm);
    WHEN UTL_FILE.WRITE_ERROR THEN
      raise_application_error(-20503,
                              'Cannot write to file :' || v_FILENAME ||
                              ', write error; code:' || sqlcode ||
                              ',message:' || sqlerrm);
end;